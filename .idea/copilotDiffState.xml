<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.env.example">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env.example" />
              <option name="updatedContent" value="# 견적 문의 구글폼 URL&#10;NEXT_PUBLIC_QUOTE_FORM_URL=https://forms.gle/your-google-form-id&#10;&#10;# 카카오톡 채널 URL&#10;NEXT_PUBLIC_KAKAO_CHANNEL_URL=https://pf.kakao.com/_your_channel&#10;&#10;# Google Tag Manager ID (선택사항)&#10;NEXT_PUBLIC_GTM_ID=GTM-XXXXXXX&#10;&#10;# Google Analytics 4 ID (선택사항)&#10;NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.env.local">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env.local" />
              <option name="updatedContent" value="# 견적 문의 구글폼 URL (실제 구글폼 URL로 교체 필요)&#10;NEXT_PUBLIC_QUOTE_FORM_URL=https://forms.gle/example123&#10;&#10;# 카카오톡 채널 URL (실제 카카오톡 채널 URL로 교체 필요)  &#10;NEXT_PUBLIC_KAKAO_CHANNEL_URL=https://pf.kakao.com/_example&#10;&#10;# Google Tag Manager ID (선택사항)&#10;# NEXT_PUBLIC_GTM_ID=GTM-XXXXXXX&#10;&#10;# Google Analytics 4 ID (선택사항)&#10;# NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="updatedContent" value="# M클린 - 입주청소 랜딩 페이지&#10;&#10;하루 한 집만 작업하는 프리미엄 입주청소 서비스 랜딩 페이지입니다.&#10;&#10;##  빠른 시작&#10;&#10;```bash&#10;# 의존성 설치&#10;npm install&#10;&#10;# 개발 서버 실행&#10;npm run dev&#10;&#10;# 프로덕션 빌드&#10;npm run build&#10;&#10;# 프로덕션 서버 실행&#10;npm start&#10;```&#10;&#10;개발 서버가 실행되면 [http://localhost:3000](http://localhost:3000)에서 확인할 수 있습니다.&#10;&#10;##  프로젝트 구조&#10;&#10;```&#10;src/&#10;├── api/                 # API 클라이언트 설정&#10;├── app/                 # Next.js App Router 페이지&#10;├── domain/              # 도메인별 비즈니스 로직&#10;│   ├── home/           # 메인/히어로 섹션&#10;│   ├── about/          # 회사 소개&#10;│   ├── services/       # 서비스 소개&#10;│   ├── portfolio/      # 시공 사례&#10;│   ├── quote/          # 견적 문의&#10;│   └── faq/            # FAQ&#10;├── pages/              # 페이지 컴포넌트 (확장 가능)&#10;└── shared/             # 공통 컴포넌트 및 유틸리티&#10;    ├── ui/             # UI 컴포넌트&#10;    ├── hooks/          # 커스텀 훅&#10;    ├── utils/          # 유틸리티 함수&#10;    ├── types/          # TypeScript 타입 정의&#10;    └── constants/      # 상수 정의&#10;```&#10;&#10;## ⚙️ 설정&#10;&#10;### 환경 변수&#10;&#10;`.env.local` 파일을 생성하고 다음 환경 변수들을 설정하세요:&#10;&#10;```bash&#10;# 견적 문의 구글폼 URL (필수)&#10;NEXT_PUBLIC_QUOTE_FORM_URL=https://forms.gle/your-google-form-id&#10;&#10;# 카카오톡 채널 URL (필수)&#10;NEXT_PUBLIC_KAKAO_CHANNEL_URL=https://pf.kakao.com/_your_channel&#10;&#10;# Google Tag Manager ID (선택사항)&#10;NEXT_PUBLIC_GTM_ID=GTM-XXXXXXX&#10;&#10;# Google Analytics 4 ID (선택사항)&#10;NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX&#10;```&#10;&#10;### 사업자 정보 수정&#10;&#10;`src/shared/constants/index.ts`에서 사업자 정보를 수정하세요:&#10;&#10;```typescript&#10;export const CONTACT_INFO = {&#10;  businessInfo: {&#10;    name: '실제 상호명',&#10;    representative: '실제 대표자명',&#10;    businessNumber: '실제 사업자번호',&#10;    address: '실제 주소',&#10;    phone: '실제 연락처',&#10;  },&#10;} as const;&#10;```&#10;&#10;##  커스터마이징&#10;&#10;### 색상 및 스타일&#10;&#10;Tailwind CSS를 사용하고 있습니다. `tailwind.config.ts`에서 색상과 테마를 커스터마이징할 수 있습니다.&#10;&#10;### 콘텐츠 수정&#10;&#10;각 섹션의 콘텐츠는 해당 도메인 폴더의 컴포넌트에서 수정할 수 있습니다:&#10;&#10;- **히어로 섹션**: `src/domain/home/HeroSection.tsx`&#10;- **회사 소개**: `src/domain/about/AboutSection.tsx`&#10;- **서비스**: `src/domain/services/ServicesSection.tsx`&#10;- **시공 사례**: `src/domain/portfolio/PortfolioSection.tsx`&#10;- **견적 문의**: `src/domain/quote/QuoteSection.tsx`&#10;- **FAQ**: `src/domain/faq/FAQSection.tsx`&#10;&#10;### 이미지 교체&#10;&#10;현재 Unsplash의 샘플 이미지를 사용하고 있습니다. 실제 서비스 이미지로 교체하세요:&#10;&#10;1. 이미지를 `public/` 폴더에 업로드&#10;2. 각 컴포넌트의 이미지 URL을 `/your-image.jpg` 형태로 변경&#10;&#10;##  분석 및 추적&#10;&#10;Google Analytics와 Google Tag Manager가 설정되어 있습니다. 주요 이벤트들이 자동으로 추적됩니다:&#10;&#10;- 견적 문의 클릭&#10;- 카카오톡 상담 클릭&#10;- 서비스 조회&#10;- 포트폴리오 조회&#10;&#10;##  배포&#10;&#10;### Vercel 배포 (권장)&#10;&#10;1. [Vercel](https://vercel.com)에 저장소 연결&#10;2. 환경 변수 설정&#10;3. 배포 완료&#10;&#10;### 기타 플랫폼&#10;&#10;Next.js 애플리케이션이므로 다음 플랫폼에서도 배포 가능합니다:&#10;- Netlify&#10;- AWS Amplify&#10;- CloudFlare Pages&#10;- DigitalOcean App Platform&#10;&#10;##  기술 스택&#10;&#10;- **프레임워크**: Next.js 15.4.6&#10;- **언어**: TypeScript&#10;- **스타일링**: Tailwind CSS&#10;- **애니메이션**: Framer Motion&#10;- **상태 관리**: React Query (설치됨, 필요시 사용)&#10;- **HTTP 클라이언트**: Axios&#10;&#10;##  라이선스&#10;&#10;이 프로젝트는 MIT 라이선스 하에 제공됩니다." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/next.config.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/next.config.ts" />
              <option name="originalContent" value="import type { NextConfig } from &quot;next&quot;;&#10;&#10;const nextConfig: NextConfig = {&#10;  /* config options here */&#10;};&#10;&#10;export default nextConfig;&#10;" />
              <option name="updatedContent" value="import type { NextConfig } from &quot;next&quot;;&#10;&#10;/** @type {import('next').NextConfig} */&#10;const nextConfig: NextConfig = {&#10;  reactStrictMode: true,&#10;  experimental: {&#10;    typedRoutes: true,&#10;  },&#10;  images: {&#10;    remotePatterns: [&#10;      { &#10;        protocol: &quot;https&quot;, &#10;        hostname: &quot;images.unsplash.com&quot;,&#10;        port: &quot;&quot;,&#10;        pathname: &quot;/**&quot;&#10;      }&#10;    ]&#10;  }&#10;};&#10;&#10;export default nextConfig;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/package.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/package.json" />
              <option name="originalContent" value="{&#10;  &quot;name&quot;: &quot;mclean&quot;,&#10;  &quot;version&quot;: &quot;0.1.0&quot;,&#10;  &quot;private&quot;: true,&#10;  &quot;scripts&quot;: {&#10;    &quot;dev&quot;: &quot;next dev --turbopack&quot;,&#10;    &quot;build&quot;: &quot;next build&quot;,&#10;    &quot;start&quot;: &quot;next start&quot;,&#10;    &quot;lint&quot;: &quot;next lint&quot;&#10;  },&#10;  &quot;dependencies&quot;: {&#10;    &quot;@tanstack/react-query&quot;: &quot;^5.84.2&quot;,&#10;    &quot;axios&quot;: &quot;^1.11.0&quot;,&#10;    &quot;clsx&quot;: &quot;^2.1.1&quot;,&#10;    &quot;framer-motion&quot;: &quot;^12.23.12&quot;,&#10;    &quot;lucide-react&quot;: &quot;^0.539.0&quot;,&#10;    &quot;next&quot;: &quot;15.4.6&quot;,&#10;    &quot;react&quot;: &quot;19.1.0&quot;,&#10;    &quot;react-dom&quot;: &quot;19.1.0&quot;,&#10;    &quot;tailwind-merge&quot;: &quot;^3.3.1&quot;&#10;  },&#10;  &quot;devDependencies&quot;: {&#10;    &quot;@eslint/eslintrc&quot;: &quot;^3&quot;,&#10;    &quot;@tailwindcss/postcss&quot;: &quot;^4&quot;,&#10;    &quot;@types/node&quot;: &quot;^20&quot;,&#10;    &quot;@types/react&quot;: &quot;^19&quot;,&#10;    &quot;@types/react-dom&quot;: &quot;^19&quot;,&#10;    &quot;eslint&quot;: &quot;^9&quot;,&#10;    &quot;eslint-config-next&quot;: &quot;15.4.6&quot;,&#10;    &quot;tailwindcss&quot;: &quot;^4&quot;,&#10;    &quot;typescript&quot;: &quot;^5&quot;&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="{&#10;  &quot;name&quot;: &quot;mclean&quot;,&#10;  &quot;version&quot;: &quot;0.1.0&quot;,&#10;  &quot;private&quot;: true,&#10;  &quot;scripts&quot;: {&#10;    &quot;dev&quot;: &quot;next dev&quot;,&#10;    &quot;build&quot;: &quot;next build&quot;,&#10;    &quot;start&quot;: &quot;next start&quot;,&#10;    &quot;lint&quot;: &quot;next lint&quot;&#10;  },&#10;  &quot;dependencies&quot;: {&#10;    &quot;@tanstack/react-query&quot;: &quot;^5.84.2&quot;,&#10;    &quot;axios&quot;: &quot;^1.11.0&quot;,&#10;    &quot;clsx&quot;: &quot;^2.1.1&quot;,&#10;    &quot;framer-motion&quot;: &quot;^12.23.12&quot;,&#10;    &quot;lucide-react&quot;: &quot;^0.539.0&quot;,&#10;    &quot;next&quot;: &quot;15.4.6&quot;,&#10;    &quot;react&quot;: &quot;19.1.0&quot;,&#10;    &quot;react-dom&quot;: &quot;19.1.0&quot;,&#10;    &quot;tailwind-merge&quot;: &quot;^3.3.1&quot;&#10;  },&#10;  &quot;devDependencies&quot;: {&#10;    &quot;@eslint/eslintrc&quot;: &quot;^3&quot;,&#10;    &quot;@tailwindcss/postcss&quot;: &quot;^4&quot;,&#10;    &quot;@types/node&quot;: &quot;^20&quot;,&#10;    &quot;@types/react&quot;: &quot;^19&quot;,&#10;    &quot;@types/react-dom&quot;: &quot;^19&quot;,&#10;    &quot;eslint&quot;: &quot;^9&quot;,&#10;    &quot;eslint-config-next&quot;: &quot;15.4.6&quot;,&#10;    &quot;tailwindcss&quot;: &quot;^4&quot;,&#10;    &quot;typescript&quot;: &quot;^5&quot;&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/api/client.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/api/client.ts" />
              <option name="updatedContent" value="import axios from 'axios';&#10;&#10;// Axios 인스턴스 생성&#10;export const apiClient = axios.create({&#10;  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL || '/api',&#10;  timeout: 10000,&#10;  headers: {&#10;    'Content-Type': 'application/json',&#10;  },&#10;});&#10;&#10;// 요청 인터셉터&#10;apiClient.interceptors.request.use(&#10;  (config) =&gt; {&#10;    // 요청 전 로직 (예: 토큰 추가)&#10;    return config;&#10;  },&#10;  (error) =&gt; {&#10;    return Promise.reject(error);&#10;  }&#10;);&#10;&#10;// 응답 인터셉터&#10;apiClient.interceptors.response.use(&#10;  (response) =&gt; {&#10;    return response;&#10;  },&#10;  (error) =&gt; {&#10;    // 에러 처리 로직&#10;    console.error('API Error:', error);&#10;    return Promise.reject(error);&#10;  }&#10;);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/globals.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/globals.css" />
              <option name="originalContent" value="@import &quot;tailwindcss&quot;;&#10;&#10;:root {&#10;  --background: #ffffff;&#10;  --foreground: #171717;&#10;}&#10;&#10;@theme inline {&#10;  --color-background: var(--background);&#10;  --color-foreground: var(--foreground);&#10;  --font-sans: var(--font-geist-sans);&#10;  --font-mono: var(--font-geist-mono);&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  :root {&#10;    --background: #0a0a0a;&#10;    --foreground: #ededed;&#10;  }&#10;}&#10;&#10;body {&#10;  background: var(--background);&#10;  color: var(--foreground);&#10;  font-family: Arial, Helvetica, sans-serif;&#10;}&#10;" />
              <option name="updatedContent" value="@import &quot;tailwindcss&quot;;&#10;&#10;:root {&#10;  --background: #ffffff;&#10;  --foreground: #171717;&#10;}&#10;&#10;@theme inline {&#10;  --color-background: var(--background);&#10;  --color-foreground: var(--foreground);&#10;  --font-sans: var(--font-geist-sans);&#10;  --font-mono: var(--font-geist-mono);&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  :root {&#10;    --background: #0a0a0a;&#10;    --foreground: #ededed;&#10;  }&#10;}&#10;&#10;body {&#10;  background: var(--background);&#10;  color: var(--foreground);&#10;  font-family: Arial, Helvetica, sans-serif;&#10;}&#10;&#10;@tailwind base;&#10;@tailwind components;&#10;@tailwind utilities;&#10;&#10;html { &#10;  scroll-behavior: smooth; &#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/layout.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/layout.tsx" />
              <option name="originalContent" value="import type { Metadata } from &quot;next&quot;;&#10;import { Geist, Geist_Mono } from &quot;next/font/google&quot;;&#10;import &quot;./globals.css&quot;;&#10;&#10;const geistSans = Geist({&#10;  variable: &quot;--font-geist-sans&quot;,&#10;  subsets: [&quot;latin&quot;],&#10;});&#10;&#10;const geistMono = Geist_Mono({&#10;  variable: &quot;--font-geist-mono&quot;,&#10;  subsets: [&quot;latin&quot;],&#10;});&#10;&#10;export const metadata: Metadata = {&#10;  title: &quot;Create Next App&quot;,&#10;  description: &quot;Generated by create next app&quot;,&#10;};&#10;&#10;export default function RootLayout({&#10;  children,&#10;}: Readonly&lt;{&#10;  children: React.ReactNode;&#10;}&gt;) {&#10;  return (&#10;    &lt;html lang=&quot;en&quot;&gt;&#10;      &lt;body&#10;        className={`${geistSans.variable} ${geistMono.variable} antialiased`}&#10;      &gt;&#10;        {children}&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import type { Metadata } from &quot;next&quot;;&#10;import &quot;./globals.css&quot;;&#10;&#10;const siteName = &quot;M클린&quot;;&#10;const siteUrl = &quot;https://mclean.co.kr&quot;; // 실제 도메인으로 교체 필요&#10;const defaultDesc = &quot;하루 한 집만 작업하는 프리미엄 입주청소 – 이사 전·후, 거주, 인테리어 후까지 꼼꼼하게.&quot;;&#10;&#10;export const metadata: Metadata = {&#10;  metadataBase: new URL(siteUrl),&#10;  title: {&#10;    default: `${siteName}`,&#10;    template: `%s | ${siteName}`,&#10;  },&#10;  description: defaultDesc,&#10;  openGraph: {&#10;    type: &quot;website&quot;,&#10;    url: siteUrl,&#10;    title: siteName,&#10;    description: defaultDesc,&#10;    siteName,&#10;    images: [{ url: &quot;/og.jpg&quot;, width: 1200, height: 630, alt: siteName }],&#10;    locale: &quot;ko_KR&quot;,&#10;  },&#10;  twitter: {&#10;    card: &quot;summary_large_image&quot;,&#10;    title: siteName,&#10;    description: defaultDesc,&#10;    images: [&quot;/og.jpg&quot;],&#10;  },&#10;  icons: { icon: &quot;/favicon.ico&quot; }&#10;};&#10;&#10;export default function RootLayout({&#10;  children,&#10;}: {&#10;  children: React.ReactNode;&#10;}) {&#10;  const gtmId = process.env.NEXT_PUBLIC_GTM_ID;&#10;  const gaId = process.env.NEXT_PUBLIC_GA_ID;&#10;  &#10;  return (&#10;    &lt;html lang=&quot;ko&quot;&gt;&#10;      &lt;head&gt;&#10;        {gtmId &amp;&amp; (&#10;          &lt;script dangerouslySetInnerHTML={{ __html: `&#10;            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':&#10;            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],&#10;            j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=&#10;            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);&#10;            })(window,document,'script','dataLayer','${gtmId}');&#10;          `}} /&gt;&#10;        )}&#10;        {gaId &amp;&amp; (&#10;          &lt;&gt;&#10;            &lt;script async src={`https://www.googletagmanager.com/gtag/js?id=${gaId}`}&gt;&lt;/script&gt;&#10;            &lt;script dangerouslySetInnerHTML={{ __html: `&#10;              window.dataLayer = window.dataLayer || [];&#10;              function gtag(){dataLayer.push(arguments);} gtag('js', new Date());&#10;              gtag('config', '${gaId}');&#10;            `}} /&gt;&#10;          &lt;/&gt;&#10;        )}&#10;      &lt;/head&gt;&#10;      &lt;body className=&quot;min-h-screen bg-gradient-to-b from-slate-50 to-white text-gray-900&quot;&gt;&#10;        {gtmId &amp;&amp; (&#10;          &lt;noscript&gt;&#10;            &lt;iframe &#10;              src={`https://www.googletagmanager.com/ns.html?id=${gtmId}`} &#10;              height=&quot;0&quot; &#10;              width=&quot;0&quot; &#10;              style={{display:'none',visibility:'hidden'}}&#10;            &gt;&lt;/iframe&gt;&#10;          &lt;/noscript&gt;&#10;        )}&#10;        {children}&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/page.tsx" />
              <option name="originalContent" value="import Image from &quot;next/image&quot;;&#10;&#10;export default function Home() {&#10;  return (&#10;    &lt;div className=&quot;font-sans grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20&quot;&gt;&#10;      &lt;main className=&quot;flex flex-col gap-[32px] row-start-2 items-center sm:items-start&quot;&gt;&#10;        &lt;Image&#10;          className=&quot;dark:invert&quot;&#10;          src=&quot;/next.svg&quot;&#10;          alt=&quot;Next.js logo&quot;&#10;          width={180}&#10;          height={38}&#10;          priority&#10;        /&gt;&#10;        &lt;ol className=&quot;font-mono list-inside list-decimal text-sm/6 text-center sm:text-left&quot;&gt;&#10;          &lt;li className=&quot;mb-2 tracking-[-.01em]&quot;&gt;&#10;            Get started by editing{&quot; &quot;}&#10;            &lt;code className=&quot;bg-black/[.05] dark:bg-white/[.06] font-mono font-semibold px-1 py-0.5 rounded&quot;&gt;&#10;              src/app/page.tsx&#10;            &lt;/code&gt;&#10;            .&#10;          &lt;/li&gt;&#10;          &lt;li className=&quot;tracking-[-.01em]&quot;&gt;&#10;            Save and see your changes instantly.&#10;          &lt;/li&gt;&#10;        &lt;/ol&gt;&#10;&#10;        &lt;div className=&quot;flex gap-4 items-center flex-col sm:flex-row&quot;&gt;&#10;          &lt;a&#10;            className=&quot;rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto&quot;&#10;            href=&quot;https://vercel.com/new?utm_source=create-next-app&amp;utm_medium=appdir-template-tw&amp;utm_campaign=create-next-app&quot;&#10;            target=&quot;_blank&quot;&#10;            rel=&quot;noopener noreferrer&quot;&#10;          &gt;&#10;            &lt;Image&#10;              className=&quot;dark:invert&quot;&#10;              src=&quot;/vercel.svg&quot;&#10;              alt=&quot;Vercel logomark&quot;&#10;              width={20}&#10;              height={20}&#10;            /&gt;&#10;            Deploy now&#10;          &lt;/a&gt;&#10;          &lt;a&#10;            className=&quot;rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]&quot;&#10;            href=&quot;https://nextjs.org/docs?utm_source=create-next-app&amp;utm_medium=appdir-template-tw&amp;utm_campaign=create-next-app&quot;&#10;            target=&quot;_blank&quot;&#10;            rel=&quot;noopener noreferrer&quot;&#10;          &gt;&#10;            Read our docs&#10;          &lt;/a&gt;&#10;        &lt;/div&gt;&#10;      &lt;/main&gt;&#10;      &lt;footer className=&quot;row-start-3 flex gap-[24px] flex-wrap items-center justify-center&quot;&gt;&#10;        &lt;a&#10;          className=&quot;flex items-center gap-2 hover:underline hover:underline-offset-4&quot;&#10;          href=&quot;https://nextjs.org/learn?utm_source=create-next-app&amp;utm_medium=appdir-template-tw&amp;utm_campaign=create-next-app&quot;&#10;          target=&quot;_blank&quot;&#10;          rel=&quot;noopener noreferrer&quot;&#10;        &gt;&#10;          &lt;Image&#10;            aria-hidden&#10;            src=&quot;/file.svg&quot;&#10;            alt=&quot;File icon&quot;&#10;            width={16}&#10;            height={16}&#10;          /&gt;&#10;          Learn&#10;        &lt;/a&gt;&#10;        &lt;a&#10;          className=&quot;flex items-center gap-2 hover:underline hover:underline-offset-4&quot;&#10;          href=&quot;https://vercel.com/templates?framework=next.js&amp;utm_source=create-next-app&amp;utm_medium=appdir-template-tw&amp;utm_campaign=create-next-app&quot;&#10;          target=&quot;_blank&quot;&#10;          rel=&quot;noopener noreferrer&quot;&#10;        &gt;&#10;          &lt;Image&#10;            aria-hidden&#10;            src=&quot;/window.svg&quot;&#10;            alt=&quot;Window icon&quot;&#10;            width={16}&#10;            height={16}&#10;          /&gt;&#10;          Examples&#10;        &lt;/a&gt;&#10;        &lt;a&#10;          className=&quot;flex items-center gap-2 hover:underline hover:underline-offset-4&quot;&#10;          href=&quot;https://nextjs.org?utm_source=create-next-app&amp;utm_medium=appdir-template-tw&amp;utm_campaign=create-next-app&quot;&#10;          target=&quot;_blank&quot;&#10;          rel=&quot;noopener noreferrer&quot;&#10;        &gt;&#10;          &lt;Image&#10;            aria-hidden&#10;            src=&quot;/globe.svg&quot;&#10;            alt=&quot;Globe icon&quot;&#10;            width={16}&#10;            height={16}&#10;          /&gt;&#10;          Go to nextjs.org →&#10;        &lt;/a&gt;&#10;      &lt;/footer&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import { Header } from &quot;../shared/ui/Header&quot;;&#10;import { Footer } from &quot;../shared/ui/Footer&quot;;&#10;import { HeroSection } from &quot;../domain/home/HeroSection&quot;;&#10;import { AboutSection } from &quot;../domain/about/AboutSection&quot;;&#10;import { ServicesSection } from &quot;../domain/services/ServicesSection&quot;;&#10;import { PortfolioSection } from &quot;../domain/portfolio/PortfolioSection&quot;;&#10;import { QuoteSection } from &quot;../domain/quote/QuoteSection&quot;;&#10;import { FAQSection } from &quot;../domain/faq/FAQSection&quot;;&#10;&#10;export default function Home() {&#10;  return (&#10;    &lt;div className=&quot;min-h-screen&quot;&gt;&#10;      &lt;Header /&gt;&#10;      &lt;main&gt;&#10;        &lt;HeroSection /&gt;&#10;        &lt;AboutSection /&gt;&#10;        &lt;ServicesSection /&gt;&#10;        &lt;PortfolioSection /&gt;&#10;        &lt;QuoteSection /&gt;&#10;        &lt;FAQSection /&gt;&#10;      &lt;/main&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/domain/about/AboutSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/domain/about/AboutSection.tsx" />
              <option name="updatedContent" value="'use client'&#10;import { Badge, Card, Container, Section } from &quot;../../shared/ui&quot;;&#10;&#10;const COMPANY_INFO = {&#10;  name: &quot;M클린&quot;,&#10;  philosophy: [&#10;    &quot;하루 한 집 집중 작업으로 품질 우선&quot;,&#10;    &quot;모서리·몰딩·틈새까지 디테일 청소&quot;, &#10;    &quot;추가비용 없음 (예외 사전안내)&quot;&#10;  ],&#10;  equipment: [&#10;    { name: &quot;컬비 청소기&quot;, img: &quot;https://images.unsplash.com/photo-1581578731548-c64695cc6952?q=80&amp;w=640&amp;auto=format&amp;fit=crop&quot; },&#10;    { name: &quot;스팀기&quot;, img: &quot;https://images.unsplash.com/photo-1581579188871-c5f5c6a4f5a5?q=80&amp;w=640&amp;auto=format&amp;fit=crop&quot; },&#10;    { name: &quot;친환경 약품&quot;, img: &quot;https://images.unsplash.com/photo-1581578017429-1b0c6c6c15ba?q=80&amp;w=640&amp;auto=format&amp;fit=crop&quot; },&#10;    { name: &quot;피톤치드&quot;, img: &quot;https://images.unsplash.com/photo-1581579188871-1b0c6c6c15ba?q=80&amp;w=640&amp;auto=format&amp;fit=crop&quot; },&#10;  ],&#10;  team: [&#10;    { &#10;      role: &quot;대표&quot;, &#10;      name: &quot;김하루&quot;, &#10;      photo: &quot;https://images.unsplash.com/photo-1544723795-3fb6469f5b39?q=80&amp;w=640&amp;auto=format&amp;fit=crop&quot;, &#10;      intro: &quot;청소 품질은 타협하지 않습니다.&quot; &#10;    },&#10;    { &#10;      role: &quot;팀장&quot;, &#10;      name: &quot;이디테일&quot;, &#10;      photo: &quot;https://images.unsplash.com/photo-1544005313-94ddf0286df2?q=80&amp;w=640&amp;auto=format&amp;fit=crop&quot;, &#10;      intro: &quot;보이지 않는 먼지까지 챙깁니다.&quot; &#10;    },&#10;  ],&#10;};&#10;&#10;export function AboutSection() {&#10;  return (&#10;    &lt;Section id=&quot;about&quot; className=&quot;py-16&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;div className=&quot;mb-8 flex items-end justify-between&quot;&gt;&#10;          &lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;회사 소개&lt;/h2&gt;&#10;          &lt;Badge className=&quot;bg-red-50 text-red-700 border-red-200&quot;&gt;사이 청소는 진행하지 않음&lt;/Badge&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 gap-6 md:grid-cols-3&quot;&gt;&#10;          &lt;Card className=&quot;p-6 md:col-span-2&quot;&gt;&#10;            &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;운영 철학&lt;/h3&gt;&#10;            &lt;ul className=&quot;mt-4 list-disc space-y-2 pl-5 text-sm&quot;&gt;&#10;              {COMPANY_INFO.philosophy.map((item, index) =&gt; (&#10;                &lt;li key={index}&gt;{item}&lt;/li&gt;&#10;              ))}&#10;            &lt;/ul&gt;&#10;            &#10;            &lt;div className=&quot;mt-6 grid grid-cols-2 gap-4 sm:grid-cols-4&quot;&gt;&#10;              {COMPANY_INFO.equipment.map((equipment) =&gt; (&#10;                &lt;figure key={equipment.name} className=&quot;text-center&quot;&gt;&#10;                  &lt;img &#10;                    src={equipment.img} &#10;                    alt={equipment.name} &#10;                    className=&quot;h-24 w-full rounded-lg object-cover&quot; &#10;                  /&gt;&#10;                  &lt;figcaption className=&quot;mt-2 text-xs text-gray-700&quot;&gt;&#10;                    {equipment.name}&#10;                  &lt;/figcaption&gt;&#10;                &lt;/figure&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/Card&gt;&#10;          &#10;          &lt;Card className=&quot;p-6&quot;&gt;&#10;            &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;팀 소개&lt;/h3&gt;&#10;            &lt;div className=&quot;mt-4 space-y-4&quot;&gt;&#10;              {COMPANY_INFO.team.map((member) =&gt; (&#10;                &lt;div key={member.name} className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;img &#10;                    src={member.photo} &#10;                    alt={member.name} &#10;                    className=&quot;h-12 w-12 rounded-full object-cover&quot; &#10;                  /&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium&quot;&gt;&#10;                      {member.role} · {member.name}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600&quot;&gt;&#10;                      {member.intro}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/Card&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/Section&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/domain/faq/FAQSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/domain/faq/FAQSection.tsx" />
              <option name="originalContent" value="'use client'&#10;import { Container, Section } from &quot;../../shared/ui&quot;;&#10;import { FAQ } from &quot;../../shared/types&quot;;&#10;&#10;const FAQ_DATA: FAQ[] = [&#10;  {&#10;    id: &quot;faq-1&quot;,&#10;    question: &quot;작업 시간은 얼마나 걸리나요?&quot;,&#10;    answer: &quot;평수와 상태에 따라 다르지만 보통 4~8시간 내외입니다.&quot;,&#10;    category: &quot;작업시간&quot;&#10;  },&#10;  {&#10;    id: &quot;faq-2&quot;,&#10;    question: &quot;예약은 언제 하는 게 좋나요?&quot;,&#10;    answer: &quot;희망 날짜 최소 3~7일 전에 문의 주시면 원활합니다.&quot;,&#10;    category: &quot;예약&quot;&#10;  },&#10;  {&#10;    id: &quot;faq-3&quot;,&#10;    question: &quot;추가비용이 있나요?&quot;,&#10;    answer: &quot;원칙적으로 없습니다. 다만 쓰레기 다량 방치, 중공청소 미실시 등 예외는 사전 안내 후 협의합니다.&quot;,&#10;    category: &quot;비용&quot;&#10;  },&#10;  {&#10;    id: &quot;faq-4&quot;,&#10;    question: &quot;어떤 장비를 사용하나요?&quot;,&#10;    answer: &quot;컬비 청소기, 스팀기, 친환경 약품, 피톤치드 등을 사용합니다.&quot;,&#10;    category: &quot;장비&quot;&#10;  }&#10;];&#10;&#10;export function FAQSection() {&#10;  return (&#10;    &lt;Section id=&quot;faq&quot; className=&quot;py-16&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;문의 · FAQ&lt;/h2&gt;&#10;&#10;        &lt;div className=&quot;mt-6 divide-y rounded-2xl border bg-white/70&quot;&gt;&#10;          {FAQ_DATA.map((faq) =&gt; (&#10;            &lt;details key={faq.id} className=&quot;group p-5&quot;&gt;&#10;              &lt;summary className=&quot;flex cursor-pointer list-none items-center justify-between text-sm font-medium&quot;&gt;&#10;                {faq.question}&#10;                &lt;span className=&quot;ml-4 text-gray-500 transition group-open:rotate-180&quot;&gt;⌃&lt;/span&gt;&#10;              &lt;/summary&gt;&#10;              &lt;p className=&quot;mt-3 text-sm text-gray-700&quot;&gt;{faq.answer}&lt;/p&gt;&#10;            &lt;/details&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/Section&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#13;&#10;import { Container, Section } from &quot;../../shared/ui&quot;;&#13;&#10;import { useAccordion } from &quot;../../shared/hooks/useAccordion&quot;;&#13;&#10;import { FAQ } from &quot;../../shared/types&quot;;&#13;&#10;&#13;&#10;const FAQ_DATA: FAQ[] = [&#13;&#10;  {&#13;&#10;    id: &quot;faq-1&quot;,&#13;&#10;    question: &quot;작업 시간은 얼마나 걸리나요?&quot;,&#13;&#10;    answer: &quot;평수와 상태에 따라 다르지만 보통 4~8시간 내외입니다.&quot;,&#13;&#10;    category: &quot;작업시간&quot;&#13;&#10;  },&#13;&#10;  {&#13;&#10;    id: &quot;faq-2&quot;,&#13;&#10;    question: &quot;예약은 언제 하는 게 좋나요?&quot;,&#13;&#10;    answer: &quot;희망 날짜 최소 3~7일 전에 문의 주시면 원활합니다.&quot;,&#13;&#10;    category: &quot;예약&quot;&#13;&#10;  },&#13;&#10;  {&#13;&#10;    id: &quot;faq-3&quot;,&#13;&#10;    question: &quot;추가비용이 있나요?&quot;,&#13;&#10;    answer: &quot;원칙적으로 없습니다. 다만 쓰레기 다량 방치, 중공청소 미실시 등 예외는 사전 안내 후 협의합니다.&quot;,&#13;&#10;    category: &quot;비용&quot;&#13;&#10;  },&#13;&#10;  {&#13;&#10;    id: &quot;faq-4&quot;,&#13;&#10;    question: &quot;어떤 장비를 사용하나요?&quot;,&#13;&#10;    answer: &quot;컬비 청소기, 스팀기, 친환경 약품, 피톤치드 등을 사용합니다.&quot;,&#13;&#10;    category: &quot;장비&quot;&#13;&#10;  }&#13;&#10;];&#13;&#10;&#13;&#10;function AccordionItem({ faq }: { faq: FAQ }) {&#13;&#10;  const { isOpen, toggle, contentRef, contentStyle } = useAccordion();&#13;&#10;&#13;&#10;  return (&#13;&#10;    &lt;div className=&quot;border-b last:border-b-0&quot;&gt;&#13;&#10;      &lt;button&#13;&#10;        onClick={toggle}&#13;&#10;        className=&quot;flex w-full cursor-pointer items-center justify-between p-5 text-left text-sm font-medium hover:bg-gray-50/50 transition-colors&quot;&#13;&#10;        aria-expanded={isOpen}&#13;&#10;      &gt;&#13;&#10;        {faq.question}&#13;&#10;        &lt;span &#13;&#10;          className={`ml-4 text-gray-500 transition-transform duration-300 ${&#13;&#10;            isOpen ? 'rotate-180' : 'rotate-0'&#13;&#10;          }`}&#13;&#10;        &gt;&#13;&#10;          ⌃&#13;&#10;        &lt;/span&gt;&#13;&#10;      &lt;/button&gt;&#13;&#10;      &lt;div ref={contentRef} style={contentStyle}&gt;&#13;&#10;        &lt;div className=&quot;px-5 pb-5&quot;&gt;&#13;&#10;          &lt;p className=&quot;text-sm text-gray-700&quot;&gt;{faq.answer}&lt;/p&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;}&#13;&#10;&#13;&#10;export function FAQSection() {&#13;&#10;  return (&#13;&#10;    &lt;Section id=&quot;faq&quot; className=&quot;py-16&quot;&gt;&#13;&#10;      &lt;Container&gt;&#13;&#10;        &lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;문의 · FAQ&lt;/h2&gt;&#13;&#10;        &#13;&#10;        &lt;div className=&quot;mt-6 rounded-2xl border bg-white/70&quot;&gt;&#13;&#10;          {FAQ_DATA.map((faq) =&gt; (&#13;&#10;            &lt;AccordionItem key={faq.id} faq={faq} /&gt;&#13;&#10;          ))}&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/Container&gt;&#13;&#10;    &lt;/Section&gt;&#13;&#10;  );&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/domain/home/HeroSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/domain/home/HeroSection.tsx" />
              <option name="updatedContent" value="'use client'&#10;import { motion } from &quot;framer-motion&quot;;&#10;import { Badge, Button, Container, Section } from &quot;../../shared/ui&quot;;&#10;import { CONTACT_INFO, ANALYTICS_EVENTS } from &quot;../../shared/constants&quot;;&#10;import { track } from &quot;../../shared/utils&quot;;&#10;&#10;const COMPANY_PHILOSOPHY = [&quot;하루 한 집&quot;, &quot;디테일 청소&quot;, &quot;추가비용 없음&quot;];&#10;&#10;export function HeroSection() {&#10;  const handleQuoteClick = () =&gt; {&#10;    track(ANALYTICS_EVENTS.HERO_CTA_CLICK, { location: 'hero' });&#10;    window.open(CONTACT_INFO.formUrl, '_blank');&#10;  };&#10;&#10;  const handleServicesClick = () =&gt; {&#10;    track('cta_services_view');&#10;    document.getElementById('services')?.scrollIntoView({ behavior: 'smooth' });&#10;  };&#10;&#10;  return (&#10;    &lt;Section id=&quot;home&quot; className=&quot;relative overflow-hidden&quot;&gt;&#10;      &lt;div className=&quot;absolute inset-0 -z-10&quot;&gt;&#10;        &lt;img&#10;          src=&quot;https://images.unsplash.com/photo-1564540574859-0dfb63985947?q=80&amp;w=1800&amp;auto=format&amp;fit=crop&quot;&#10;          className=&quot;h-full w-full object-cover opacity-40&quot;&#10;          alt=&quot;현장 작업 배경&quot;&#10;        /&gt;&#10;        &lt;div className=&quot;absolute inset-0 bg-gradient-to-b from-white via-white/60 to-white&quot; /&gt;&#10;      &lt;/div&gt;&#10;      &#10;      &lt;Container&gt;&#10;        &lt;div className=&quot;flex min-h-[72vh] flex-col items-start justify-center py-16&quot;&gt;&#10;          &lt;motion.h1 &#10;            initial={{ opacity: 0, y: 20 }} &#10;            animate={{ opacity: 1, y: 0 }} &#10;            transition={{ duration: 0.5 }} &#10;            className=&quot;text-3xl font-extrabold leading-tight sm:text-5xl&quot;&#10;          &gt;&#10;            하루 한 집만 작업하는{&quot; &quot;}&#10;            &lt;span className=&quot;text-emerald-700&quot;&gt;프리미엄 입주청소&lt;/span&gt;&#10;          &lt;/motion.h1&gt;&#10;          &#10;          &lt;motion.p &#10;            initial={{ opacity: 0, y: 20 }} &#10;            animate={{ opacity: 1, y: 0 }} &#10;            transition={{ duration: 0.6, delay: 0.1 }} &#10;            className=&quot;mt-4 text-base text-gray-700 sm:text-lg&quot;&#10;          &gt;&#10;            이사 전·후, 거주, 인테리어 후까지 꼼꼼하게.&#10;          &lt;/motion.p&gt;&#10;          &#10;          &lt;div className=&quot;mt-8 flex flex-wrap items-center gap-3&quot;&gt;&#10;            {COMPANY_PHILOSOPHY.map((philosophy) =&gt; (&#10;              &lt;Badge key={philosophy}&gt;{philosophy}&lt;/Badge&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;          &#10;          &lt;div className=&quot;mt-8 flex gap-3&quot;&gt;&#10;            &lt;Button onClick={handleQuoteClick} size=&quot;lg&quot;&gt;&#10;              지금 견적 문의하기&#10;            &lt;/Button&gt;&#10;            &lt;Button onClick={handleServicesClick} variant=&quot;outline&quot; size=&quot;lg&quot;&gt;&#10;              서비스 보러가기&#10;            &lt;/Button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/Section&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/domain/portfolio/PortfolioSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/domain/portfolio/PortfolioSection.tsx" />
              <option name="originalContent" value="'use client'&#10;import { Card, Container, Section } from &quot;../../shared/ui&quot;;&#10;import BeforeAfter from &quot;../../shared/ui/BeforeAfter&quot;;&#10;import { PortfolioItem } from &quot;../../shared/types&quot;;&#10;import { track, ANALYTICS_EVENTS } from &quot;../../shared/utils&quot;;&#10;&#10;const PORTFOLIO_CASES: PortfolioItem[] = [&#10;  {&#10;    id: &quot;case-1&quot;,&#10;    title: &quot;신축 33평 입주청소&quot;,&#10;    description: &quot;곰팡이 제거 &amp; 피톤치드 마감&quot;,&#10;    before: &quot;https://images.unsplash.com/photo-1528323273322-d81458248d40?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;    after: &quot;https://images.unsplash.com/photo-1505691723518-36a5ac3b2d95?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;    serviceType: &quot;입주청소&quot;,&#10;    workDate: &quot;2024-03-15&quot;&#10;  },&#10;  {&#10;    id: &quot;case-2&quot;,&#10;    title: &quot;이사 전 청소&quot;,&#10;    description: &quot;주방 후드 기름때 클리닝&quot;,&#10;    before: &quot;https://images.unsplash.com/photo-1519710164239-da123dc03ef4?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;    after: &quot;https://images.unsplash.com/photo-1505691938895-1758d7feb511?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;    serviceType: &quot;이사청소&quot;,&#10;    workDate: &quot;2024-03-10&quot;&#10;  },&#10;  {&#10;    id: &quot;case-3&quot;,&#10;    title: &quot;거주청소&quot;,&#10;    description: &quot;욕실 실리콘 곰팡이 제거&quot;,&#10;    before: &quot;https://images.unsplash.com/photo-1523419409543-44b0aef0c260?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;    after: &quot;https://images.unsplash.com/photo-1505691723518-36a5ac3b2d95?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;    serviceType: &quot;거주청소&quot;,&#10;    workDate: &quot;2024-03-05&quot;&#10;  }&#10;];&#10;&#10;export function PortfolioSection() {&#10;  const handleCaseView = (caseId: string) =&gt; {&#10;    track(ANALYTICS_EVENTS.PORTFOLIO_VIEW, { case_id: caseId });&#10;  };&#10;&#10;  return (&#10;    &lt;Section id=&quot;cases&quot; className=&quot;py-16&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;시공 사례&lt;/h2&gt;&#10;&#10;        &lt;div className=&quot;mt-8 grid grid-cols-1 gap-6 md:grid-cols-3&quot;&gt;&#10;          {PORTFOLIO_CASES.map((portfolioCase, index) =&gt; (&#10;            &lt;Card&#10;              key={portfolioCase.id}&#10;              className=&quot;overflow-hidden&quot;&#10;              onClick={() =&gt; handleCaseView(portfolioCase.id)}&#10;            &gt;&#10;              &lt;div className=&quot;relative aspect-[4/3] w-full&quot;&gt;&#10;                &lt;BeforeAfter&#10;                  before={portfolioCase.before}&#10;                  after={portfolioCase.after}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;p-4&quot;&gt;&#10;                &lt;h3 className=&quot;font-medium text-sm mb-1&quot;&gt;{portfolioCase.title}&lt;/h3&gt;&#10;                &lt;p className=&quot;text-sm text-gray-600&quot;&gt;{portfolioCase.description}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/Card&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        &lt;blockquote className=&quot;mt-8 rounded-2xl border bg-white/70 p-6 text-sm text-gray-700&quot;&gt;&#10;          &amp;ldquo;입주 전 먼지가 걱정이었는데, 창틀부터 수납장 내부까지 완벽했습니다. 피톤치드 향도 좋아요!&amp;rdquo; – 고객 후기&#10;        &lt;/blockquote&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/Section&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;import { Card, Container, Section } from &quot;../../shared/ui&quot;;&#10;import BeforeAfter from &quot;../../shared/ui/BeforeAfter&quot;;&#10;import { PortfolioItem } from &quot;../../shared/types&quot;;&#10;import { track, ANALYTICS_EVENTS } from &quot;../../shared/utils&quot;;&#10;&#10;const PORTFOLIO_CASES: PortfolioItem[] = [&#10;&#9;{&#10;&#9;&#9;id: &quot;case-1&quot;,&#10;&#9;&#9;title: &quot;신축 33평 입주청소&quot;,&#10;&#9;&#9;description: &quot;곰팡이 제거 &amp; 피톤치드 마감&quot;,&#10;&#9;&#9;before: &quot;https://images.unsplash.com/photo-1528323273322-d81458248d40?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;&#9;&#9;after: &quot;https://images.unsplash.com/photo-1505691723518-36a5ac3b2d95?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;&#9;&#9;serviceType: &quot;입주청소&quot;,&#10;&#9;&#9;workDate: &quot;2024-03-15&quot;,&#10;&#9;},&#10;&#9;{&#10;&#9;&#9;id: &quot;case-2&quot;,&#10;&#9;&#9;title: &quot;이사 전 청소&quot;,&#10;&#9;&#9;description: &quot;주방 후드 기름때 클리닝&quot;,&#10;&#9;&#9;before: &quot;https://images.unsplash.com/photo-1519710164239-da123dc03ef4?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;&#9;&#9;after: &quot;https://images.unsplash.com/photo-1505691938895-1758d7feb511?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;&#9;&#9;serviceType: &quot;이사청소&quot;,&#10;&#9;&#9;workDate: &quot;2024-03-10&quot;,&#10;&#9;},&#10;&#9;{&#10;&#9;&#9;id: &quot;case-3&quot;,&#10;&#9;&#9;title: &quot;거주청소&quot;,&#10;&#9;&#9;description: &quot;욕실 실리콘 곰팡이 제거&quot;,&#10;&#9;&#9;before: &quot;https://images.unsplash.com/photo-1523419409543-44b0aef0c260?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;&#9;&#9;after: &quot;https://images.unsplash.com/photo-1505691723518-36a5ac3b2d95?q=80&amp;w=1080&amp;auto=format&amp;fit=crop&quot;,&#10;&#9;&#9;serviceType: &quot;거주청소&quot;,&#10;&#9;&#9;workDate: &quot;2024-03-05&quot;,&#10;&#9;},&#10;];&#10;&#10;export function PortfolioSection() {&#10;&#9;const handleCaseView = (caseId: string) =&gt; {&#10;&#9;&#9;track(ANALYTICS_EVENTS.PORTFOLIO_VIEW, { case_id: caseId });&#10;&#9;};&#10;&#10;&#9;return (&#10;&#9;&#9;&lt;Section id=&quot;cases&quot; className=&quot;py-16&quot;&gt;&#10;&#9;&#9;&#9;&lt;Container&gt;&#10;&#9;&#9;&#9;&#9;&lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;시공 사례&lt;/h2&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;div className=&quot;mt-8 grid grid-cols-1 gap-6 md:grid-cols-3&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;{PORTFOLIO_CASES.map((portfolioCase) =&gt; (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;Card&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;key={portfolioCase.id}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;className=&quot;overflow-hidden&quot;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;onClick={() =&gt; handleCaseView(portfolioCase.id)}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;relative aspect-[4/3] w-full&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;BeforeAfter&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;before={portfolioCase.before}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;after={portfolioCase.after}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;/&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;div className=&quot;p-4&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;h3 className=&quot;font-medium text-sm mb-1&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{portfolioCase.title}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/h3&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p className=&quot;text-sm text-gray-600&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{portfolioCase.description}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/Card&gt;&#10;&#9;&#9;&#9;&#9;&#9;))}&#10;&#9;&#9;&#9;&#9;&lt;/div&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;blockquote className=&quot;mt-8 rounded-2xl border bg-white/70 p-6 text-sm text-gray-700&quot;&gt;&#10;&#9;&#9;&#9;&#9;&#9;&amp;ldquo;입주 전 먼지가 걱정이었는데, 창틀부터 수납장 내부까지 완벽했습니다. 피톤치드 향도 좋아요!&amp;rdquo; – 고객 후기&#10;&#9;&#9;&#9;&#9;&lt;/blockquote&gt;&#10;&#9;&#9;&#9;&lt;/Container&gt;&#10;&#9;&#9;&lt;/Section&gt;&#10;&#9;);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/domain/quote/QuoteSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/domain/quote/QuoteSection.tsx" />
              <option name="updatedContent" value="'use client'&#10;import { Button, Card, Container, Section } from &quot;../../shared/ui&quot;;&#10;import { CONTACT_INFO, ANALYTICS_EVENTS } from &quot;../../shared/constants&quot;;&#10;import { track } from &quot;../../shared/utils&quot;;&#10;&#10;export function QuoteSection() {&#10;  const handleQuoteFormClick = () =&gt; {&#10;    track(ANALYTICS_EVENTS.CTA_QUOTE_CLICK, { location: 'quote' });&#10;    window.open(CONTACT_INFO.formUrl, '_blank');&#10;  };&#10;&#10;  const handleKakaoClick = () =&gt; {&#10;    track(ANALYTICS_EVENTS.CTA_KAKAO_CLICK, { location: 'quote' });&#10;    window.open(CONTACT_INFO.kakaoUrl, '_blank');&#10;  };&#10;&#10;  return (&#10;    &lt;Section id=&quot;quote&quot; className=&quot;bg-emerald-50 py-16&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;div className=&quot;grid items-center gap-8 md:grid-cols-2&quot;&gt;&#10;          &lt;div&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;견적 문의&lt;/h2&gt;&#10;            &lt;p className=&quot;mt-2 text-sm text-gray-700&quot;&gt;&#10;              평수, 구조, 확장 여부, 희망 날짜, 특이사항을 남겨주시면 빠르게 답변드립니다.&#10;            &lt;/p&gt;&#10;            &lt;ul className=&quot;mt-4 list-disc space-y-1 pl-5 text-sm text-gray-700&quot;&gt;&#10;              &lt;li&gt;추가비용 없음 (예외 사전 안내)&lt;/li&gt;&#10;              &lt;li&gt;하루 한 집만 진행&lt;/li&gt;&#10;              &lt;li&gt;스팀·피톤치드 포함&lt;/li&gt;&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;          &#10;          &lt;Card className=&quot;p-6&quot;&gt;&#10;            &lt;Button &#10;              onClick={handleQuoteFormClick}&#10;              className=&quot;w-full&quot;&#10;              size=&quot;lg&quot;&#10;            &gt;&#10;              구글폼으로 이동하기&#10;            &lt;/Button&gt;&#10;            &lt;p className=&quot;mt-3 text-center text-xs text-gray-600&quot;&gt;&#10;              폼 내용: 평수, 구조, 확장 여부, 희망 날짜, 특이사항&#10;            &lt;/p&gt;&#10;            &#10;            &lt;div className=&quot;mt-6 text-center&quot;&gt;&#10;              &lt;Button &#10;                onClick={handleKakaoClick}&#10;                variant=&quot;outline&quot;&#10;                className=&quot;bg-yellow-400 border-yellow-400 hover:bg-yellow-500 text-gray-900&quot;&#10;              &gt;&#10;                 카카오톡 채널 상담&#10;              &lt;/Button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Card&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/Section&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/domain/services/ServicesSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/domain/services/ServicesSection.tsx" />
              <option name="updatedContent" value="'use client'&#10;import { Badge, Card, Container, Section } from &quot;../../shared/ui&quot;;&#10;import { Service } from &quot;../../shared/types&quot;;&#10;&#10;const SERVICES: Service[] = [&#10;  {&#10;    id: &quot;move-in&quot;,&#10;    title: &quot;입주 청소&quot;,&#10;    description: &quot;새집 입주 전 완벽한 청소&quot;,&#10;    features: [&quot;스팀 청소&quot;, &quot;피톤치드&quot;, &quot;고급 장비&quot;],&#10;    workTime: &quot;4~8시간&quot;,&#10;    workers: 2,&#10;    includedServices: [&quot;벽지 미세먼지 제거&quot;, &quot;창틀·몰딩·수납장 내부&quot;, &quot;바닥·타일&quot;, &quot;욕실&quot;, &quot;주방&quot;, &quot;창문&quot;],&#10;    additionalInfo: &quot;추가비용 없음. 단, 쓰레기 다량 방치, 중공청소 미실시 후 입주청소 등 예외는 사전 안내 후 별도 협의.&quot;&#10;  },&#10;  {&#10;    id: &quot;move-out&quot;,&#10;    title: &quot;이사 청소&quot;, &#10;    description: &quot;이사 전후 깔끔한 마무리&quot;,&#10;    features: [&quot;스팀 청소&quot;, &quot;피톤치드&quot;, &quot;고급 장비&quot;],&#10;    workTime: &quot;4~8시간&quot;,&#10;    workers: 2,&#10;    includedServices: [&quot;벽지 미세먼지 제거&quot;, &quot;창틀·몰딩·수납장 내부&quot;, &quot;바닥·타일&quot;, &quot;욕실&quot;, &quot;주방&quot;, &quot;창문&quot;]&#10;  },&#10;  {&#10;    id: &quot;residential&quot;,&#10;    title: &quot;거주 청소&quot;,&#10;    description: &quot;살고 계시는 집의 정기 청소&quot;,&#10;    features: [&quot;스팀 청소&quot;, &quot;피톤치드&quot;, &quot;고급 장비&quot;],&#10;    workTime: &quot;3~6시간&quot;, &#10;    workers: 2,&#10;    includedServices: [&quot;먼지/때 제거&quot;, &quot;주방·욕실 집중&quot;, &quot;바닥·창문&quot;, &quot;수납장 외부&quot;]&#10;  },&#10;  {&#10;    id: &quot;post-renovation&quot;,&#10;    title: &quot;인테리어 후 청소&quot;,&#10;    description: &quot;공사 후 완벽한 마무리 청소&quot;,&#10;    features: [&quot;스팀 청소&quot;, &quot;피톤치드&quot;, &quot;고급 장비&quot;],&#10;    workTime: &quot;6~10시간&quot;,&#10;    workers: 3,&#10;    includedServices: [&quot;중공 먼지 제거&quot;, &quot;타일 분진 제거&quot;, &quot;창틀·몰딩&quot;, &quot;바닥 폴리싱&quot;]&#10;  }&#10;];&#10;&#10;export function ServicesSection() {&#10;  return (&#10;    &lt;Section id=&quot;services&quot; className=&quot;bg-slate-50 py-16&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;h2 className=&quot;text-2xl font-bold sm:text-3xl&quot;&gt;서비스 소개&lt;/h2&gt;&#10;        &lt;p className=&quot;mt-2 text-sm text-gray-600&quot;&gt;사이 청소는 진행하지 않습니다.&lt;/p&gt;&#10;&#10;        &lt;div className=&quot;mt-8 grid grid-cols-1 gap-6 md:grid-cols-2&quot;&gt;&#10;          {SERVICES.map((service) =&gt; (&#10;            &lt;Card key={service.id} className=&quot;p-6&quot;&gt;&#10;              &lt;div className=&quot;flex items-start justify-between gap-4&quot;&gt;&#10;                &lt;div&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;{service.title}&lt;/h3&gt;&#10;                  &lt;div className=&quot;mt-1 text-sm text-gray-600&quot;&gt;&#10;                    작업 시간 {service.workTime} · 인원 {service.workers}~{service.workers + 2}인&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                  {service.features.map((feature) =&gt; (&#10;                    &lt;Badge key={feature}&gt;{feature}&lt;/Badge&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &#10;              &lt;div className=&quot;mt-4&quot;&gt;&#10;                &lt;h4 className=&quot;text-sm font-medium&quot;&gt;작업 범위&lt;/h4&gt;&#10;                &lt;ul className=&quot;mt-2 grid list-disc grid-cols-2 gap-x-6 gap-y-1 pl-5 text-sm&quot;&gt;&#10;                  {service.includedServices.map((item) =&gt; (&#10;                    &lt;li key={item}&gt;{item}&lt;/li&gt;&#10;                  ))}&#10;                &lt;/ul&gt;&#10;                &#10;                {service.additionalInfo &amp;&amp; (&#10;                  &lt;p className=&quot;mt-4 text-xs text-gray-600&quot;&gt;{service.additionalInfo}&lt;/p&gt;&#10;                )}&#10;                &#10;                &lt;p className=&quot;mt-1 text-xs text-gray-600&quot;&gt;&#10;                  에어컨 청소 가능(분해 청소 별도 금액 안내)&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/Card&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/Section&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/constants/index.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/constants/index.ts" />
              <option name="updatedContent" value="// 기본 상수&#10;export const SITE_CONFIG = {&#10;  name: 'M클린',&#10;  description: '하루 한 집만 작업하는 프리미엄 입주청소',&#10;  url: 'https://mclean.co.kr',&#10;} as const;&#10;&#10;// 연락처 정보&#10;export const CONTACT_INFO = {&#10;  kakaoUrl: 'https://pf.kakao.com/_xjxjxjxj',&#10;  formUrl: 'https://forms.gle/abcd1234',&#10;  businessInfo: {&#10;    name: 'M클린',&#10;    representative: '홍길동',&#10;    businessNumber: '123-45-67890',&#10;    address: '서울특별시 강남구 테헤란로 123',&#10;    phone: '010-1234-5678',&#10;  },&#10;} as const;&#10;&#10;// GTM/GA 이벤트&#10;export const ANALYTICS_EVENTS = {&#10;  CTA_QUOTE_CLICK: 'cta_quote_click',&#10;  CTA_KAKAO_CLICK: 'cta_kakao_click',&#10;  HERO_CTA_CLICK: 'hero_cta_click',&#10;  PORTFOLIO_VIEW: 'portfolio_view',&#10;} as const;&#10;&#10;// 서비스 타입&#10;export const SERVICE_TYPES = {&#10;  MOVE_IN: 'move-in',&#10;  MOVE_OUT: 'move-out',&#10;  RESIDENTIAL: 'residential',&#10;  POST_RENOVATION: 'post-renovation',&#10;} as const;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/hooks/useAccordion.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/hooks/useAccordion.ts" />
              <option name="updatedContent" value="'use client'&#10;import { useState, useRef, useEffect } from 'react';&#10;&#10;export function useAccordion(initialOpen = false) {&#10;  const [isOpen, setIsOpen] = useState(initialOpen);&#10;  const [height, setHeight] = useState&lt;number | undefined&gt;(initialOpen ? undefined : 0);&#10;  const contentRef = useRef&lt;HTMLDivElement&gt;(null);&#10;&#10;  const toggle = () =&gt; {&#10;    setIsOpen(prev =&gt; !prev);&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    if (!contentRef.current) return;&#10;&#10;    if (isOpen) {&#10;      // 열릴 때: 실제 높이로 설정&#10;      const scrollHeight = contentRef.current.scrollHeight;&#10;      setHeight(scrollHeight);&#10;    } else {&#10;      // 닫힐 때: 0으로 설정&#10;      setHeight(0);&#10;    }&#10;  }, [isOpen]);&#10;&#10;  const contentStyle = {&#10;    height: height,&#10;    overflow: 'hidden' as const,&#10;    transition: 'height 0.3s ease-in-out',&#10;  };&#10;&#10;  return {&#10;    isOpen,&#10;    toggle,&#10;    contentRef,&#10;    contentStyle,&#10;  };&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/types/index.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/types/index.ts" />
              <option name="updatedContent" value="// 서비스 관련 타입&#10;export interface Service {&#10;  id: string;&#10;  title: string;&#10;  description: string;&#10;  features: string[];&#10;  workTime: string;&#10;  workers: number;&#10;  includedServices: string[];&#10;  additionalInfo?: string;&#10;}&#10;&#10;// 포트폴리오/시공사례 타입&#10;export interface PortfolioItem {&#10;  id: string;&#10;  title: string;&#10;  before: string;&#10;  after: string;&#10;  description: string;&#10;  serviceType: string;&#10;  workDate: string;&#10;}&#10;&#10;// 고객 후기 타입&#10;export interface Review {&#10;  id: string;&#10;  content: string;&#10;  author: string;&#10;  rating: number;&#10;  serviceType: string;&#10;  date: string;&#10;}&#10;&#10;// FAQ 타입&#10;export interface FAQ {&#10;  id: string;&#10;  question: string;&#10;  answer: string;&#10;  category: string;&#10;}&#10;&#10;// 견적 문의 폼 타입&#10;export interface QuoteFormData {&#10;  area: string;&#10;  structure: string;&#10;  extension: boolean;&#10;  preferredDate: string;&#10;  specialRequests: string;&#10;  contact: string;&#10;}&#10;&#10;// 분석 이벤트 타입&#10;export interface AnalyticsEvent {&#10;  event: string;&#10;  properties?: Record&lt;string, unknown&gt;;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/ui/BeforeAfter.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/ui/BeforeAfter.tsx" />
              <option name="updatedContent" value="'use client'&#10;import React from 'react'&#10;&#10;interface BeforeAfterProps {&#10;  before: string;&#10;  after: string;&#10;  beforeLabel?: string;&#10;  afterLabel?: string;&#10;}&#10;&#10;export default function BeforeAfter({ &#10;  before, &#10;  after, &#10;  beforeLabel = &quot;Before&quot;, &#10;  afterLabel = &quot;After&quot; &#10;}: BeforeAfterProps) {&#10;  const [sliderPosition, setSliderPosition] = React.useState(50);&#10;&#10;  return (&#10;    &lt;div className=&quot;relative h-full w-full overflow-hidden rounded-lg&quot;&gt;&#10;      {/* Before 이미지 */}&#10;      &lt;img &#10;        src={before} &#10;        alt={beforeLabel} &#10;        className=&quot;absolute inset-0 h-full w-full object-cover&quot; &#10;      /&gt;&#10;      &#10;      {/* After 이미지 (슬라이더 위치에 따라 표시) */}&#10;      &lt;div &#10;        className=&quot;absolute inset-0 overflow-hidden&quot; &#10;        style={{ width: `${sliderPosition}%` }}&#10;      &gt;&#10;        &lt;img &#10;          src={after} &#10;          alt={afterLabel} &#10;          className=&quot;h-full w-full object-cover&quot; &#10;        /&gt;&#10;      &lt;/div&gt;&#10;      &#10;      {/* 슬라이더 */}&#10;      &lt;input&#10;        type=&quot;range&quot;&#10;        min={0}&#10;        max={100}&#10;        value={sliderPosition}&#10;        onChange={(e) =&gt; setSliderPosition(parseInt(e.target.value))}&#10;        className=&quot;absolute bottom-3 left-1/2 z-10 -translate-x-1/2 w-[80%] cursor-ew-resize accent-emerald-600&quot;&#10;        aria-label=&quot;before-after slider&quot;&#10;      /&gt;&#10;      &#10;      {/* 구분선 */}&#10;      &lt;div &#10;        className=&quot;pointer-events-none absolute inset-y-0 z-10 w-0.5 bg-white/80 shadow&quot; &#10;        style={{ left: `${sliderPosition}%` }} &#10;      /&gt;&#10;      &#10;      {/* 라벨 */}&#10;      &lt;div className=&quot;absolute left-3 top-3 rounded bg-black/50 px-2 py-1 text-xs text-white&quot;&gt;&#10;        {beforeLabel}&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;absolute right-3 top-3 rounded bg-black/50 px-2 py-1 text-xs text-white&quot;&gt;&#10;        {afterLabel}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/ui/Footer.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/ui/Footer.tsx" />
              <option name="updatedContent" value="'use client'&#10;import { Container } from &quot;../ui&quot;;&#10;import { CONTACT_INFO, SITE_CONFIG } from &quot;../constants&quot;;&#10;import { scrollToSection } from &quot;../utils&quot;;&#10;&#10;export function Footer() {&#10;  const currentYear = new Date().getFullYear();&#10;&#10;  const handleNavClick = (sectionId: string) =&gt; {&#10;    scrollToSection(sectionId);&#10;  };&#10;&#10;  return (&#10;    &lt;footer className=&quot;border-t bg-white&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;div className=&quot;grid gap-6 py-8 md:grid-cols-3&quot;&gt;&#10;          &lt;div&gt;&#10;            &lt;div className=&quot;flex items-center gap-2 font-extrabold&quot;&gt;&#10;              &lt;span&gt;&lt;/span&gt;&#10;              &lt;span&gt;{SITE_CONFIG.name}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &lt;p className=&quot;mt-2 text-xs text-gray-600&quot;&gt;&#10;              © {currentYear} {SITE_CONFIG.name}. All rights reserved.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &#10;          &lt;div className=&quot;text-sm text-gray-700&quot;&gt;&#10;            &lt;div className=&quot;font-semibold&quot;&gt;사업자 정보&lt;/div&gt;&#10;            &lt;p className=&quot;mt-2 text-xs leading-6 text-gray-600&quot;&gt;&#10;              상호: {CONTACT_INFO.businessInfo.name}&lt;br/&gt;&#10;              대표: {CONTACT_INFO.businessInfo.representative}&lt;br/&gt;&#10;              사업자번호: {CONTACT_INFO.businessInfo.businessNumber}&lt;br/&gt;&#10;              주소: {CONTACT_INFO.businessInfo.address}&lt;br/&gt;&#10;              연락처: {CONTACT_INFO.businessInfo.phone}&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &#10;          &lt;div className=&quot;text-sm text-gray-700&quot;&gt;&#10;            &lt;div className=&quot;font-semibold&quot;&gt;바로가기&lt;/div&gt;&#10;            &lt;ul className=&quot;mt-2 space-y-2 text-xs&quot;&gt;&#10;              &lt;li&gt;&#10;                &lt;button &#10;                  onClick={() =&gt; handleNavClick('about')} &#10;                  className=&quot;hover:underline&quot;&#10;                &gt;&#10;                  회사 소개&#10;                &lt;/button&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;button &#10;                  onClick={() =&gt; handleNavClick('services')} &#10;                  className=&quot;hover:underline&quot;&#10;                &gt;&#10;                  서비스&#10;                &lt;/button&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;button &#10;                  onClick={() =&gt; handleNavClick('cases')} &#10;                  className=&quot;hover:underline&quot;&#10;                &gt;&#10;                  시공 사례&#10;                &lt;/button&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;button &#10;                  onClick={() =&gt; handleNavClick('quote')} &#10;                  className=&quot;hover:underline&quot;&#10;                &gt;&#10;                  견적 문의&#10;                &lt;/button&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;button &#10;                  onClick={() =&gt; handleNavClick('faq')} &#10;                  className=&quot;hover:underline&quot;&#10;                &gt;&#10;                  문의·FAQ&#10;                &lt;/button&gt;&#10;              &lt;/li&gt;&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/footer&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/ui/Header.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/ui/Header.tsx" />
              <option name="originalContent" value="'use client'&#10;import { Container, NavLink, Button } from &quot;../ui&quot;;&#10;import { CONTACT_INFO, SITE_CONFIG, ANALYTICS_EVENTS } from &quot;../constants&quot;;&#10;import { track, scrollToSection } from &quot;../utils&quot;;&#10;&#10;export function Header() {&#10;  const handleQuoteClick = () =&gt; {&#10;    track(ANALYTICS_EVENTS.CTA_QUOTE_CLICK, { location: 'header' });&#10;    window.open(CONTACT_INFO.formUrl, '_blank');&#10;  };&#10;&#10;  const handleNavClick = (sectionId: string) =&gt; {&#10;    scrollToSection(sectionId);&#10;  };&#10;&#10;  return (&#10;    &lt;header className=&quot;sticky top-0 z-40 w-full border-b bg-white/80 backdrop-blur&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;div className=&quot;flex h-16 items-center justify-between gap-4&quot;&gt;&#10;          &lt;a&#10;            href=&quot;#home&quot;&#10;            className=&quot;flex items-center gap-2 font-extrabold tracking-tight&quot;&#10;            onClick={() =&gt; handleNavClick('home')}&#10;          &gt;&#10;           &lt;img src=&quot;/logo.png&quot; alt=&quot;로고&quot; className=&quot;h-8 w-auto&quot; /&gt;&#10;          &lt;/a&gt;&#10;&#10;          &lt;nav className=&quot;hidden items-center gap-6 sm:flex&quot;&gt;&#10;            &lt;NavLink href=&quot;#about&quot; onClick={() =&gt; handleNavClick('about')}&gt;&#10;              회사 소개&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#services&quot; onClick={() =&gt; handleNavClick('services')}&gt;&#10;              서비스&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#cases&quot; onClick={() =&gt; handleNavClick('cases')}&gt;&#10;              시공 사례&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#quote&quot; onClick={() =&gt; handleNavClick('quote')}&gt;&#10;              견적 문의&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#faq&quot; onClick={() =&gt; handleNavClick('faq')}&gt;&#10;              문의·FAQ&#10;            &lt;/NavLink&gt;&#10;          &lt;/nav&gt;&#10;&#10;          &lt;Button onClick={handleQuoteClick} size=&quot;sm&quot;&gt;&#10;            견적 문의하기&#10;          &lt;/Button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/header&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="'use client'&#10;import { Container, NavLink, Button } from &quot;../ui&quot;;&#10;import { CONTACT_INFO, ANALYTICS_EVENTS } from &quot;../constants&quot;;&#10;import { track, scrollToSection } from &quot;../utils&quot;;&#10;&#10;export function Header() {&#10;  const handleQuoteClick = () =&gt; {&#10;    track(ANALYTICS_EVENTS.CTA_QUOTE_CLICK, { location: 'header' });&#10;    window.open(CONTACT_INFO.formUrl, '_blank');&#10;  };&#10;&#10;  const handleNavClick = (sectionId: string) =&gt; {&#10;    scrollToSection(sectionId);&#10;  };&#10;&#10;  return (&#10;    &lt;header className=&quot;sticky top-0 z-40 w-full border-b bg-white/80 backdrop-blur&quot;&gt;&#10;      &lt;Container&gt;&#10;        &lt;div className=&quot;flex h-16 items-center justify-between gap-4&quot;&gt;&#10;          &lt;a&#10;            href=&quot;#home&quot;&#10;            className=&quot;flex items-center gap-2 font-extrabold tracking-tight&quot;&#10;            onClick={() =&gt; handleNavClick('home')}&#10;          &gt;&#10;           &lt;img src=&quot;/logo.png&quot; alt=&quot;로고&quot; className=&quot;h-8 w-auto&quot; /&gt;&#10;          &lt;/a&gt;&#10;&#10;          &lt;nav className=&quot;hidden items-center gap-6 sm:flex&quot;&gt;&#10;            &lt;NavLink href=&quot;#about&quot; onClick={() =&gt; handleNavClick('about')}&gt;&#10;              회사 소개&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#services&quot; onClick={() =&gt; handleNavClick('services')}&gt;&#10;              서비스&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#cases&quot; onClick={() =&gt; handleNavClick('cases')}&gt;&#10;              시공 사례&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#quote&quot; onClick={() =&gt; handleNavClick('quote')}&gt;&#10;              견적 문의&#10;            &lt;/NavLink&gt;&#10;            &lt;NavLink href=&quot;#faq&quot; onClick={() =&gt; handleNavClick('faq')}&gt;&#10;              문의·FAQ&#10;            &lt;/NavLink&gt;&#10;          &lt;/nav&gt;&#10;&#10;          &lt;Button onClick={handleQuoteClick} size=&quot;sm&quot;&gt;&#10;            견적 문의하기&#10;          &lt;/Button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Container&gt;&#10;    &lt;/header&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/ui/index.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/ui/index.tsx" />
              <option name="originalContent" value="import React from &quot;react&quot;;&#10;import { cn } from &quot;../utils&quot;;&#10;&#10;export const Container = ({ children, className = &quot;&quot; }: { children: React.ReactNode; className?: string }) =&gt; (&#10;  &lt;div className={cn(&quot;mx-auto w-full max-w-6xl px-4 sm:px-6 lg:px-8&quot;, className)}&gt;{children}&lt;/div&gt;&#10;);&#10;&#10;export const Card = ({ children, className = &quot;&quot; }: { children: React.ReactNode; className?: string }) =&gt; (&#10;  &lt;div className={cn(&quot;rounded-2xl border bg-white/70 backdrop-blur shadow-sm&quot;, className)}&gt;{children}&lt;/div&gt;&#10;);&#10;&#10;export const Badge = ({ children, className = &quot;&quot; }: { children: React.ReactNode; className?: string }) =&gt; (&#10;  &lt;span className={cn(&quot;inline-flex items-center rounded-full border px-3 py-1 text-xs font-medium text-gray-700&quot;, className)}&gt;&#10;    {children}&#10;  &lt;/span&gt;&#10;);&#10;&#10;export const NavLink = ({ href, children, onClick }: { href: string; children: React.ReactNode; onClick?: () =&gt; void }) =&gt; (&#10;  &lt;a href={href} onClick={onClick} className=&quot;text-sm font-medium text-gray-700 hover:text-gray-900 transition-colors&quot;&gt;&#10;    {children}&#10;  &lt;/a&gt;&#10;);&#10;&#10;export const Section = ({&#10;  id,&#10;  children,&#10;  className = &quot;&quot;&#10;}: {&#10;  id?: string;&#10;  children: React.ReactNode;&#10;  className?: string;&#10;}) =&gt; (&#10;  &lt;section id={id} className={cn(&quot;scroll-mt-24&quot;, className)}&gt;{children}&lt;/section&gt;&#10;);&#10;&#10;export const Button = ({&#10;  children,&#10;  variant = &quot;primary&quot;,&#10;  size = &quot;md&quot;,&#10;  className = &quot;&quot;,&#10;  ...props&#10;}: {&#10;  children: React.ReactNode;&#10;  variant?: &quot;primary&quot; | &quot;secondary&quot; | &quot;outline&quot;;&#10;  size?: &quot;sm&quot; | &quot;md&quot; | &quot;lg&quot;;&#10;  className?: string;&#10;} &amp; React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;) =&gt; {&#10;  const baseStyles = &quot;inline-flex items-center justify-center rounded-full font-semibold transition-colors&quot;;&#10;&#10;  const variants = {&#10;    primary: &quot;bg-emerald-600 text-white shadow hover:bg-emerald-700&quot;,&#10;    secondary: &quot;bg-gray-100 text-gray-900 hover:bg-gray-200&quot;,&#10;    outline: &quot;border border-gray-300 bg-white text-gray-700 hover:bg-gray-50&quot;&#10;  };&#10;&#10;  const sizes = {&#10;    sm: &quot;px-4 py-2 text-sm&quot;,&#10;    md: &quot;px-6 py-3 text-sm&quot;,&#10;    lg: &quot;px-8 py-4 text-base&quot;&#10;  };&#10;&#10;  return (&#10;    &lt;button&#10;      className={cn(baseStyles, variants[variant], sizes[size], className)}&#10;      {...props}&#10;    &gt;&#10;      {children}&#10;    &lt;/button&gt;&#10;  );&#10;};&#10;" />
              <option name="updatedContent" value="import React from &quot;react&quot;;&#10;import { cn } from &quot;../utils&quot;;&#10;&#10;export const Container = ({ children, className = &quot;&quot; }: { children: React.ReactNode; className?: string }) =&gt; (&#10;  &lt;div className={cn(&quot;mx-auto w-full max-w-6xl px-4 sm:px-6 lg:px-8&quot;, className)}&gt;{children}&lt;/div&gt;&#10;);&#10;&#10;export const Card = ({&#10;  children,&#10;  className = &quot;&quot;,&#10;  onClick&#10;}: {&#10;  children: React.ReactNode;&#10;  className?: string;&#10;  onClick?: () =&gt; void;&#10;}) =&gt; (&#10;  &lt;div&#10;    className={cn(&quot;rounded-2xl border bg-white/70 backdrop-blur shadow-sm&quot;, className)}&#10;    onClick={onClick}&#10;    role={onClick ? &quot;button&quot; : undefined}&#10;    tabIndex={onClick ? 0 : undefined}&#10;    onKeyDown={onClick ? (e) =&gt; e.key === 'Enter' &amp;&amp; onClick() : undefined}&#10;  &gt;&#10;    {children}&#10;  &lt;/div&gt;&#10;);&#10;&#10;export const Badge = ({ children, className = &quot;&quot; }: { children: React.ReactNode; className?: string }) =&gt; (&#10;  &lt;span className={cn(&quot;inline-flex items-center rounded-full border px-3 py-1 text-xs font-medium text-gray-700&quot;, className)}&gt;&#10;    {children}&#10;  &lt;/span&gt;&#10;);&#10;&#10;export const NavLink = ({ href, children, onClick }: { href: string; children: React.ReactNode; onClick?: () =&gt; void }) =&gt; (&#10;  &lt;a href={href} onClick={onClick} className=&quot;text-sm font-medium text-gray-700 hover:text-gray-900 transition-colors&quot;&gt;&#10;    {children}&#10;  &lt;/a&gt;&#10;);&#10;&#10;export const Section = ({&#10;  id,&#10;  children,&#10;  className = &quot;&quot;&#10;}: {&#10;  id?: string;&#10;  children: React.ReactNode;&#10;  className?: string;&#10;}) =&gt; (&#10;  &lt;section id={id} className={cn(&quot;scroll-mt-24&quot;, className)}&gt;{children}&lt;/section&gt;&#10;);&#10;&#10;export const Button = ({&#10;  children,&#10;  variant = &quot;primary&quot;,&#10;  size = &quot;md&quot;,&#10;  className = &quot;&quot;,&#10;  ...props&#10;}: {&#10;  children: React.ReactNode;&#10;  variant?: &quot;primary&quot; | &quot;secondary&quot; | &quot;outline&quot;;&#10;  size?: &quot;sm&quot; | &quot;md&quot; | &quot;lg&quot;;&#10;  className?: string;&#10;} &amp; React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;) =&gt; {&#10;  const baseStyles = &quot;inline-flex items-center justify-center rounded-full font-semibold transition-colors&quot;;&#10;&#10;  const variants = {&#10;    primary: &quot;bg-emerald-600 text-white shadow hover:bg-emerald-700&quot;,&#10;    secondary: &quot;bg-gray-100 text-gray-900 hover:bg-gray-200&quot;,&#10;    outline: &quot;border border-gray-300 bg-white text-gray-700 hover:bg-gray-50&quot;&#10;  };&#10;&#10;  const sizes = {&#10;    sm: &quot;px-4 py-2 text-sm&quot;,&#10;    md: &quot;px-6 py-3 text-sm&quot;,&#10;    lg: &quot;px-8 py-4 text-base&quot;&#10;  };&#10;&#10;  return (&#10;    &lt;button&#10;      className={cn(baseStyles, variants[variant], sizes[size], className)}&#10;      {...props}&#10;    &gt;&#10;      {children}&#10;    &lt;/button&gt;&#10;  );&#10;};" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/shared/utils/index.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/shared/utils/index.ts" />
              <option name="originalContent" value="import { clsx, type ClassValue } from 'clsx';&#10;import { twMerge } from 'tailwind-merge';&#10;&#10;// Tailwind CSS 클래스 병합 유틸리티&#10;export function cn(...inputs: ClassValue[]) {&#10;  return twMerge(clsx(inputs));&#10;}&#10;&#10;// 전화번호 포맷팅&#10;export function formatPhoneNumber(phone: string): string {&#10;  const cleaned = phone.replace(/\D/g, '');&#10;  const match = cleaned.match(/^(\d{3})(\d{4})(\d{4})$/);&#10;  if (match) {&#10;    return `${match[1]}-${match[2]}-${match[3]}`;&#10;  }&#10;  return phone;&#10;}&#10;&#10;// 날짜 포맷팅&#10;export function formatDate(date: Date | string): string {&#10;  const d = new Date(date);&#10;  return d.toLocaleDateString('ko-KR', {&#10;    year: 'numeric',&#10;    month: 'long',&#10;    day: 'numeric',&#10;  });&#10;}&#10;&#10;// 스크롤 부드럽게 이동&#10;export function scrollToSection(id: string) {&#10;  const element = document.getElementById(id);&#10;  if (element) {&#10;    element.scrollIntoView({&#10;      behavior: 'smooth',&#10;      block: 'start',&#10;    });&#10;  }&#10;}&#10;&#10;// 분석 이벤트 추적&#10;export function track(event: string, properties?: Record&lt;string, unknown&gt;) {&#10;  if (typeof window !== 'undefined') {&#10;    // GTM&#10;    (window as Record&lt;string, unknown&gt;).dataLayer = (window as Record&lt;string, unknown&gt;).dataLayer || [];&#10;    ((window as Record&lt;string, unknown&gt;).dataLayer as unknown[]).push({ event, ...properties });&#10;&#10;    // GA4&#10;    const gtag = (window as Record&lt;string, unknown&gt;).gtag;&#10;    if (gtag &amp;&amp; typeof gtag === 'function') {&#10;      gtag('event', event, properties);&#10;    }&#10;  }&#10;}&#10;&#10;// 상수 재export (편의성을 위해)&#10;export * from '../constants';&#10;" />
              <option name="updatedContent" value="import { clsx, type ClassValue } from 'clsx';&#10;import { twMerge } from 'tailwind-merge';&#10;&#10;// Tailwind CSS 클래스 병합 유틸리티&#10;export function cn(...inputs: ClassValue[]) {&#10;  return twMerge(clsx(inputs));&#10;}&#10;&#10;// 전화번호 포맷팅&#10;export function formatPhoneNumber(phone: string): string {&#10;  const cleaned = phone.replace(/\D/g, '');&#10;  const match = cleaned.match(/^(\d{3})(\d{4})(\d{4})$/);&#10;  if (match) {&#10;    return `${match[1]}-${match[2]}-${match[3]}`;&#10;  }&#10;  return phone;&#10;}&#10;&#10;// 날짜 포맷팅&#10;export function formatDate(date: Date | string): string {&#10;  const d = new Date(date);&#10;  return d.toLocaleDateString('ko-KR', {&#10;    year: 'numeric',&#10;    month: 'long',&#10;    day: 'numeric',&#10;  });&#10;}&#10;&#10;// 스크롤 부드럽게 이동&#10;export function scrollToSection(id: string) {&#10;  const element = document.getElementById(id);&#10;  if (element) {&#10;    element.scrollIntoView({&#10;      behavior: 'smooth',&#10;      block: 'start',&#10;    });&#10;  }&#10;}&#10;&#10;// 분석 이벤트 추적&#10;export function track(event: string, properties?: Record&lt;string, unknown&gt;) {&#10;  if (typeof window !== 'undefined') {&#10;    // GTM&#10;    const win = window as unknown as Record&lt;string, unknown&gt;;&#10;    win.dataLayer = win.dataLayer || [];&#10;    (win.dataLayer as unknown[]).push({ event, ...properties });&#10;&#10;    // GA4&#10;    const gtag = win.gtag;&#10;    if (gtag &amp;&amp; typeof gtag === 'function') {&#10;      gtag('event', event, properties);&#10;    }&#10;  }&#10;}&#10;&#10;// 상수 재export (편의성을 위해)&#10;export * from '../constants';" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>